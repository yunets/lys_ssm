<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
     http://www.springframework.org/schema/beans 
     http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
     http://www.springframework.org/schema/security   
     http://www.springframework.org/schema/security/spring-security-4.0.xsd  
     http://www.springframework.org/schema/tx 
     http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	 http://www.springframework.org/schema/jee 
	 http://www.springframework.org/schema/jee/spring-jee-4.0.xsd 
	 http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context-4.0.xsd">
     <!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
	<context:component-scan base-package="com" />

	<!-- Spring 3.0 以上使用下边这种方式获取property -->
	<!-- <context:property-placeholder location="classpath:db/datasource.properties" 
		ignore-unresolvable="true" /> -->

	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<!-- 数据库基本信息配置 -->
<!-- 		<property name="url" value="jdbc:mysql://127.0.0.1:3306/lys_ssm?useUnicode=true&amp;characterEncoding=utf-8" />
 -->		<property name="url" value="jdbc:mysql://127.0.0.1:3306/lys_ssm?useUnicode=true&amp;characterEncoding=utf-8" />
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="username" value="root" />
		<property name="password" value="123" />
		<property name="maxIdle" value="20" />
		<property name="minIdle" value="10" />
		<property name="initialSize" value="10" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		<property name="poolPreparedStatements" value="true" />
		<property name="maxOpenPreparedStatements" value="50" />
		<property name="removeAbandonedTimeout" value="180" />

		<!-- 申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能 -->
		<property name="testOnBorrow" value="false" />

		<!-- 归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能 -->
		<property name="testOnReturn" value="false" />

		<!-- 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于 timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。 -->
		<property name="testWhileIdle" value="true" />

		<!-- 用来检测连接是否有效的sql，要求是一个查询语句,如果validationQuery为 null，testOnBorrow、testOnReturn、testWhileIdle都不起其作用。 -->
		<property name="validationQuery" value="SELECT 1 FROM DUAL" />
	</bean>
	<!--  分页-->
	<bean id="paginatorInterceptor"
		class="com.github.miemiedev.mybatis.paginator.OffsetLimitInterceptor">
		<property name="dialectClass"
			value="com.github.miemiedev.mybatis.paginator.dialect.MySQLDialect" />
	</bean>

	<!-- 配置sqlSessionFactory工厂 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:db/configuration.xml"></property>
		<property name="plugins">
			<list>
				<ref bean="paginatorInterceptor" />
			</list>
		</property>
	</bean>

	<!-- 采用spring与mybatis整合的方法 -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate"
		scope="prototype">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

</beans>